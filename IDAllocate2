import java.util.*;

public class IDAllocate2 {

    Map<String, Queue<Integer>> map;
    public IDAllocate2()
    {
        map = new HashMap<>();
    }

    public String Allocate(String s)
    {
        if(!map.containsKey(s))
        {
            map.put(s, new PriorityQueue<>());
        }

        int missingPositive = findMissingValue(map.get(s));
        map.get(s).add(missingPositive);
        return s+missingPositive;
    }
    public boolean Delocate(String s)
    {
        if(!map.containsKey(s))
            return false;
        map.get(s).poll();
        return true;
    }
    private int findMissingValue(Queue<Integer> queue )
    {
        List<Integer> nums = new ArrayList(queue);
        int preVal = 0;
        for(int i = 0; i<nums.size(); i++)
        {
            if(nums.get(i)<= 0)
            {
                continue;
            }
            if(nums.get(i) == preVal+1)
            {
                preVal = nums.get(i);
                continue;
            }
            if(nums.get(i)> preVal+1)
            {
                return preVal+1;
            }
        }
        return  nums.get(nums.size()-1)+1;

    }
}
